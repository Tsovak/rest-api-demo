{
  "swagger" : "2.0",
  "info" : {
    "description" : "This is a sample API server",
    "version" : "1.0.0",
    "title" : "Swagger Golang REST API demo",
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host" : "localhost:8080",
  "basePath" : "/",
  "tags" : [ {
    "name" : "accounts"
  }, {
    "name" : "payments"
  } ],
  "schemes" : [ "http" ],
  "paths" : {
    "/accounts" : {
      "get" : {
        "tags" : [ "accounts" ],
        "summary" : "Get all accounts",
        "operationId" : "allaccount",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AccountResponce"
              }
            }
          },
          "500" : {
            "description" : "internal server error"
          }
        }
      },
      "post" : {
        "tags" : [ "accounts" ],
        "summary" : "Add a new account",
        "operationId" : "newaccount",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Account object that needs to be added to the store",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccountRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AccountResponce"
            }
          },
          "400" : {
            "description" : "invalid input: cannot decode"
          }
        }
      }
    },
    "/accounts/{accountId}/payments" : {
      "get" : {
        "tags" : [ "accounts", "payments" ],
        "summary" : "Get account payments",
        "operationId" : "accountpayment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "ID of account",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AccountPaymentResponse"
              }
            }
          },
          "500" : {
            "description" : "internal server error"
          }
        }
      }
    },
    "/payments" : {
      "post" : {
        "tags" : [ "payments" ],
        "summary" : "Do a new payment",
        "operationId" : "payments",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Payment object that needs to be added to the store",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DoPaymentRquest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AccountResponce"
            }
          },
          "400" : {
            "description" : "invalid input: cannot decode"
          }
        }
      }
    }
  },
  "definitions" : {
    "AccountRequest" : {
      "type" : "object",
      "required" : [ "balance", "currency", "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "Alice",
          "description" : "the new account name"
        },
        "currency" : {
          "type" : "string",
          "example" : "RUB",
          "description" : "the account currency"
        },
        "balance" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 100500,
          "description" : "the account initial balance"
        }
      }
    },
    "AccountResponce" : {
      "type" : "object",
      "required" : [ "balance", "currency", "id", "name" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 5,
          "description" : "the account ID"
        },
        "name" : {
          "type" : "string",
          "example" : "Alice"
        },
        "currency" : {
          "type" : "string",
          "example" : "RUB"
        },
        "balance" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 100500
        }
      }
    },
    "DoPaymentRquest" : {
      "type" : "object",
      "required" : [ "amount", "from_id", "to_id" ],
      "properties" : {
        "amount" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 100,
          "description" : "how much money need to transfer"
        },
        "to_id" : {
          "type" : "string",
          "example" : "5",
          "description" : "transfer to account ID"
        },
        "from_id" : {
          "type" : "string",
          "example" : "4",
          "description" : "transfer from account ID"
        }
      }
    },
    "AccountPaymentResponse" : {
      "type" : "object",
      "required" : [ "amount", "direction", "from_account", "id", "to_account" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 5,
          "description" : "the payment ID"
        },
        "amount" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 100,
          "description" : "how much money transfered"
        },
        "to_account" : {
          "type" : "string",
          "example" : "5",
          "description" : "transfered to account ID"
        },
        "from_account" : {
          "type" : "string",
          "example" : "4",
          "description" : "transferred from account ID"
        },
        "direction" : {
          "type" : "string",
          "description" : "transfer direction",
          "enum" : [ "outgoing", "incoming" ]
        }
      }
    }
  }
}
