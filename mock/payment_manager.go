// Code generated by MockGen. DO NOT EDIT.
// Source: payment_manager.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	model "github.com/tsovak/rest-api-demo/api/model"
	reflect "reflect"
)

// MockPaymentManager is a mock of PaymentManager interface
type MockPaymentManager struct {
	ctrl     *gomock.Controller
	recorder *MockPaymentManagerMockRecorder
}

// MockPaymentManagerMockRecorder is the mock recorder for MockPaymentManager
type MockPaymentManagerMockRecorder struct {
	mock *MockPaymentManager
}

// NewMockPaymentManager creates a new mock instance
func NewMockPaymentManager(ctrl *gomock.Controller) *MockPaymentManager {
	mock := &MockPaymentManager{ctrl: ctrl}
	mock.recorder = &MockPaymentManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPaymentManager) EXPECT() *MockPaymentManagerMockRecorder {
	return m.recorder
}

// GetAllPayments mocks base method
func (m *MockPaymentManager) GetAllPayments(ctx context.Context) ([]model.Payment, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllPayments", ctx)
	ret0, _ := ret[0].([]model.Payment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllPayments indicates an expected call of GetAllPayments
func (mr *MockPaymentManagerMockRecorder) GetAllPayments(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllPayments", reflect.TypeOf((*MockPaymentManager)(nil).GetAllPayments), ctx)
}
